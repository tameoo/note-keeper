{"version":3,"sources":["components/note-color/index.js","components/note-color/note-color.js","services/index.js","services/note-service.js","components/note-menu/note-menu.js","components/note-menu/index.js","components/pages/home-page.js","components/spinner/index.js","components/spinner/spinner.js","components/note-card/index.js","components/note-card/note-card.js","components/note-modal/index.js","components/note-modal/note-modal.js","components/note-card-container/index.js","components/note-card-container/note-card-container.js","components/pages/note-page.js","components/header/index.js","components/header/header.js","components/app/index.js","components/app/app.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","index.js"],"names":["NoteColor","className","onClick","e","props","OnSetColor","id","Component","NoteService","getFetchData","a","fetch","setfetchData","card","method","body","JSON","stringify","deleteFetchData","updateFetchData","obj","NoteMenu","service","state","showColor","color","title","descr","saved","validation","OnShowColor","setState","target","OnSubmit","preventDefault","iTitle","document","getElementById","iDescr","value","length","reset","setTimeout","this","colorBar","clazz","style","backgroundColor","onSubmit","autoComplete","type","placeholder","maxLength","onChange","text","Validation","HomePage","Spinner","NodeCard","renderItem","data","arr","note","push","map","substring","OnOpenModal","items","notes","NoteModal","OnCloseModal","OnDelete","OnSetUpdate","OnUpdate","NoteCardContainer","loading","modal","update","newNotes","key","then","json","console","log","Object","keys","openModal","Fragment","NotePage","Header","OnClickLink","first","second","classList","contains","add","remove","to","href","App","path","component","exact","ErrorIndicator","ErrorBoundary","hasError","children","ReactDOM","render"],"mappings":"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","file":"static/js/main.b9997a60.chunk.js","sourcesContent":["import NoteColor from './note-color';\r\nexport default NoteColor;","import React, { Component } from 'react';\r\nimport './note-color.css';\r\nexport default class NoteColor extends Component {\r\n    render() { \r\n        return (\r\n            <div className=\"color-picker\" onClick={(e) => this.props.OnSetColor(e)}>\r\n                <div className=\"circle\" id=\"white\"></div>\r\n                <div className=\"circle\" id=\"blue\"></div>\r\n                <div className=\"circle\" id=\"yellow\"></div>\r\n                <div className=\"circle\" id=\"green\"></div>\r\n                <div className=\"circle\" id=\"red\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n       \r\n\r\n","import NoteService from './note-service';\r\nexport default NoteService;","export default class NoteService {\r\n\r\n    getFetchData = async() => {\r\n        return await fetch('https://note-keeper-29879-default-rtdb.europe-west1.firebasedatabase.app/notes.json');\r\n    }\r\n\r\n    setfetchData =  async (card) => {\r\n        await fetch('https://note-keeper-29879-default-rtdb.europe-west1.firebasedatabase.app/notes.json', \r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify(card)\r\n            }\r\n        );\r\n    }\r\n\r\n    deleteFetchData = async (id) => {\r\n        await fetch(`https://note-keeper-29879-default-rtdb.europe-west1.firebasedatabase.app/notes/${id}.json`, \r\n            {\r\n                method: 'DELETE'\r\n            }\r\n        );\r\n    }\r\n\r\n    updateFetchData = async (id, obj) => {\r\n        await fetch(`https://note-keeper-29879-default-rtdb.europe-west1.firebasedatabase.app/notes/${id}.json`, \r\n            {\r\n                method: 'PATCH',\r\n                body: JSON.stringify(obj)\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport NoteColor from '../note-color';\r\nimport NoteService from '../../services';\r\nimport './note-menu.css';\r\n\r\nexport default class NoteMenu extends Component{\r\n    service = new NoteService();\r\n\r\n    state = {\r\n        showColor: false,\r\n        color: 'white',\r\n        title: '',\r\n        descr: '',\r\n        saved: false,\r\n        validation : null\r\n    }\r\n\r\n\r\n    OnShowColor = () => {\r\n        this.setState({\r\n            showColor: !this.state.showColor\r\n        })\r\n    }    \r\n\r\n    OnSetColor = (e) => {\r\n        let color;\r\n        switch(e.target.id){\r\n            case 'white': \r\n                color = '#ffffff'\r\n                    break;\r\n            case 'blue':\r\n                color = '#b2ebf2'\r\n                    break;\r\n            case 'yellow':\r\n                color = '#ffff8d'\r\n                        break;\r\n            case 'green':\r\n                color = '#ccff90'\r\n                    break;\r\n            case 'red':\r\n                color = '#ff8a80'\r\n                    break;\r\n            default:\r\n                return; \r\n        }\r\n\r\n        this.setState({\r\n            color\r\n        })\r\n    }\r\n\r\n    OnSubmit = (e) => {\r\n        e.preventDefault();\r\n        const iTitle = document.getElementById('title');\r\n        const iDescr = document.getElementById('notes');\r\n\r\n        if(iTitle.value === '' && iDescr.value === '' ){\r\n            this.setState({\r\n                validation: 'You forgot write something...'\r\n            });\r\n        }\r\n        \r\n        if(iTitle.value === '' && iDescr.value !== ''){\r\n            this.setState({\r\n                validation: 'Please write your title...'\r\n            });\r\n        }\r\n        \r\n        if(iDescr.value === '' && iTitle.value !== ''){\r\n            this.setState({\r\n                validation: 'Please write your note...'\r\n            });\r\n        }\r\n\r\n        if(iTitle.value.length > 0 && iDescr.value.length > 0){\r\n            const {color,title,descr} = this.state\r\n            this.service.setfetchData({\r\n                color,\r\n                title,\r\n                descr\r\n            });\r\n            this.setState({\r\n                showColor: false,\r\n                color: 'white',\r\n                title: '',\r\n                descr: '',\r\n                saved: true,\r\n                validation: null\r\n            })\r\n            e.target.reset();\r\n            setTimeout(() => this.setState({saved: false}), 2000);\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const {showColor, color, title, descr, saved,validation} = this.state;\r\n        let colorBar = null;    \r\n\r\n        if(showColor){\r\n            colorBar = <NoteColor  OnSetColor={this.OnSetColor}/>\r\n        }\r\n\r\n        let clazz = saved ? \"note-saved active\" : \"note-saved\"\r\n\r\n        return(\r\n            <div className=\"note-menu\">\r\n                <div className=\"note-menu-wrapper container\">\r\n                    <div className=\"note-menu-inner\">\r\n                        <h2>Add some notes</h2>\r\n                        <form className=\"note-form\" \r\n                                style={{backgroundColor: color}} \r\n                                onSubmit={(e) =>this.OnSubmit(e)} \r\n                                autoComplete=\"off\">\r\n                            <div className=\"note-form-title\">\r\n                                <input type=\"text\" id=\"title\" \r\n                                        placeholder=\"Your title\" \r\n                                        maxLength=\"40\" \r\n                                        className=\"note-form-input\"\r\n                                        onChange={(e) => {\r\n                                            this.setState({\r\n                                                title: e.target.value\r\n                                            })\r\n                                        }}/>\r\n                                <span className=\"note-form-counter\">{title.length}/40</span>\r\n                            </div>\r\n                            <div className=\"note-form-menu\">\r\n                                <textarea type=\"text\"\r\n                                            id=\"notes\" \r\n                                            placeholder=\"Take a note...\" \r\n                                            maxLength=\"200\" \r\n                                            className=\"note-form-input\"\r\n                                            onChange={(e) => {\r\n                                                this.setState({\r\n                                                    descr: e.target.value\r\n                                                })\r\n                                            }}/>\r\n                                <span className=\"note-form-counter\">{descr.length}/200</span>\r\n                            </div>\r\n                            <div className=\"note-form-valid\"><Validation text={validation}/></div>\r\n                            <div className=\"note-form-buttons\">\r\n                                <button type=\"button\" className=\"note-paint\" onClick={this.OnShowColor}>\r\n                                    <i className=\"fas fa-paint-brush\"></i>\r\n                                </button>\r\n                                <button className=\"note-submit\" \r\n                                        type=\"submit\">\r\n                                        Add Note\r\n                                </button>\r\n                                {colorBar}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className={clazz}><div>Note saved</div></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst Validation = ({text}) => {\r\n    if(!text){\r\n        return null;\r\n    }\r\n    return <div><i className=\"fas fa-exclamation-circle\"></i>{text}</div>\r\n}","import NoteMenu from './note-menu';\r\nexport default NoteMenu;","import React from 'react';\r\nimport NoteMenu from '../note-menu';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <section id=\"home-page\">\r\n            <NoteMenu/>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () =>{\r\n    return(\r\n        <div className=\"spinner-container\">\r\n            <div className=\"loadingio-spinner-disk-bf4ay46xjrw\">\r\n                <div className=\"ldio-p6x087xo41s\">\r\n                    <div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;\r\n\r\n\r\n","import NodeCard from './note-card';\r\nexport default NodeCard;","import React, { Component } from 'react';\r\nimport './note-card.css';\r\n\r\nexport default class NoteCard extends Component {\r\n\r\n    renderItem = (data) => {\r\n        const arr = [];\r\n        for (const card in data) {\r\n            const id = {id : card}\r\n            const note = {...data[card], ...id }\r\n            arr.push(note);\r\n        }\r\n\r\n        return arr.map(({id,title,descr,color}) => {\r\n            \r\n            if(title?.length > 20 ){\r\n                title = `${title.substring(0,20)}...`;\r\n            }\r\n\r\n            if(descr?.length > 80){\r\n                descr = `${descr.substring(0,80)}...`;\r\n            }\r\n            return(\r\n                <div className=\"note-card\" key={id} style={{backgroundColor:color}}>\r\n                    <div className=\"note-card-title\">{title}</div>\r\n                    <div className=\"note-card-descr\">{descr}</div>\r\n                    <button className=\"note-card-update\"\r\n                            onClick={() => this.props.OnOpenModal(id)}>\r\n                        <i className=\"fas fa-pen\"></i>\r\n                    </button>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const items = this.renderItem(this.props.notes);\r\n        return (\r\n            <div className=\"note-card-container\">\r\n                {items}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import NoteModal from './note-modal';\r\nexport default NoteModal;","import React, { Component } from 'react';\r\nimport NoteColor from '../note-color';\r\nimport './note-modal.css';\r\n\r\nexport default class NoteModal extends Component {\r\n\r\n    state = {\r\n        id: null,\r\n        color: null,\r\n        title: '',\r\n        descr: '',\r\n        showColor: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            id: this.props.id,\r\n            ...this.props.notes[this.props.id]\r\n        });\r\n    }\r\n  \r\n    OnShowColor = () => {\r\n        this.setState({\r\n            showColor: !this.state.showColor\r\n        });\r\n    }\r\n\r\n    OnSetColor = (e) => {\r\n        let color;\r\n        switch(e.target.id){\r\n            case 'white': \r\n                color = '#ffffff'\r\n                    break;\r\n            case 'blue':\r\n                color = '#b2ebf2'\r\n                    break;\r\n            case 'yellow':\r\n                color = '#ffff8d'\r\n                        break;\r\n            case 'green':\r\n                color = '#ccff90'\r\n                    break;\r\n            case 'red':\r\n                color = '#ff8a80'\r\n                    break;\r\n            default:\r\n                return; \r\n        }\r\n\r\n        this.setState({\r\n            color\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {id, color, title, descr,showColor} = this.state;\r\n        let colorBar = null;    \r\n        if(showColor){\r\n            colorBar = <NoteColor  OnSetColor={this.OnSetColor}/>\r\n        }\r\n\r\n            return (\r\n                <div className=\"note-modal-wrappper\">\r\n                    <div className=\"note-modal-inner container\">\r\n                        <form className=\"note-modal\" \r\n                                style={{backgroundColor: color}}\r\n                                autoComplete=\"off\"\r\n                                >\r\n                            <div className=\"note-modal-title\">\r\n                                <input type=\"text\" id=\"title\" \r\n                                        placeholder=\"Your title\" \r\n                                        maxLength=\"40\" \r\n                                        className=\"note-modal-input\"\r\n                                        value={title}\r\n                                        onChange={e => this.setState({ title: e.target.value })}\r\n                                        />\r\n                                <span className=\"note-modal-counter\">{title.length}/40</span>\r\n                            </div>\r\n                            <div className=\"note-modal-descr\">\r\n                                <textarea type=\"text\"\r\n                                            id=\"notes\" \r\n                                            placeholder=\"Take a note...\" \r\n                                            maxLength=\"200\" \r\n                                            className=\"note-modal-input\"\r\n                                            value={descr}\r\n                                            onChange={e => this.setState({ descr: e.target.value })}\r\n                                            />\r\n                                <span className=\"note-modal-counter\">{descr.length}/200</span>\r\n                            </div>\r\n                            <div className=\"note-modal-valid\"></div>\r\n                            <div className=\"note-modal-buttons\">\r\n                                <div className=\"rigth-buttons\">\r\n                                    <button type=\"button\" \r\n                                            className=\"modal-left\"\r\n                                            onClick={this.OnShowColor}>\r\n                                        <i className=\"fas fa-paint-brush\"></i>\r\n                                    </button>\r\n                                    <button type=\"button\" \r\n                                            className=\"modal-left\"\r\n                                            onClick={(e) => {\r\n                                                this.props.OnCloseModal(e);\r\n                                                this.props.OnDelete(id)\r\n                                                this.props.OnSetUpdate();\r\n                                            }}>\r\n                                        <i className=\"far fa-trash-alt\"></i>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"left-buttons\">\r\n                                    <button className=\"modal-right\" \r\n                                            type=\"submit\"\r\n                                            onClick={(e) => {\r\n                                                this.props.OnCloseModal(e);\r\n                                                this.props.OnUpdate(e,id,{color: color, title: title, descr: descr})\r\n                                                this.props.OnSetUpdate();\r\n                                            }}>\r\n                                            Update\r\n                                    </button>\r\n                                    <button className=\"modal-right\"\r\n                                            onClick={(e) => this.props.OnCloseModal(e)}>\r\n                                            Close\r\n                                    </button>\r\n                                </div>\r\n                                {colorBar}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}","import NoteCardContainer from './note-card-container';\r\nexport default NoteCardContainer;","import React, { Component} from 'react';\r\nimport Spinner from '../spinner';\r\nimport NoteCard from '../note-card';\r\nimport NoteService from '../../services';\r\nimport NoteModal from '../note-modal';\r\nimport './note-card-container.css';\r\n\r\nexport default class NoteCardContainer extends Component {\r\n    \r\n    service = new NoteService()\r\n\r\n\tstate = {\r\n\t\tloading: true,\r\n        notes: null,\r\n        id: null,\r\n        modal: false,\r\n        update: false\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n        this.service.getFetchData()\r\n        .then(data => data.json())\r\n        .then(notes => {\r\n            console.log(notes)\r\n\t\t\tthis.setState({loading: false, notes})}\r\n        );\r\n    }   \r\n\r\n    OnOpenModal = (id) => {\r\n        this.setState({\r\n            id,\r\n            modal: true\r\n        });\r\n    }\r\n\r\n    OnCloseModal = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            modal: false\r\n        });\r\n    }\r\n    \r\n    OnDelete = (id) => {\r\n        let newNotes = {};\r\n            for (const key in this.state.notes) {\r\n            if(key !== id){\r\n                newNotes[key] = this.state.notes[key];\r\n            }\r\n        }\r\n        this.setState({\r\n            notes: newNotes,\r\n            update: true\r\n        });\r\n        this.service.deleteFetchData(id);\r\n    }\r\n\r\n    OnUpdate = (e,id,obj) => {\r\n        e.preventDefault();\r\n        let newNotes = {};\r\n\r\n        const note = {\r\n            ...obj\r\n        }\r\n\r\n        for (const key in this.state.notes) {\r\n                if(key === id){\r\n                    newNotes[key] = note;\r\n                } else {\r\n                    newNotes[key] = this.state.notes[key];\r\n                }\r\n        }\r\n\r\n        this.setState({\r\n            notes: newNotes,\r\n            update: true\r\n        });\r\n\r\n        this.service.updateFetchData(id,obj);\r\n    }\r\n\r\n    OnSetUpdate = () => {\r\n        setTimeout(() => this.setState({update: false}),2000)\r\n    }\r\n\r\n\trender() {\r\n        const {notes, loading,id,modal,update} = this.state;\r\n\r\n        if(!notes && loading){\r\n\t\t\treturn <Spinner/>\r\n\t\t}\r\n\r\n\t\tif((!notes && !loading) || Object.keys(notes).length === 0){\r\n\t\t\treturn (\r\n                <p>You dont have notes!!! <br/> Go back and Write it!</p>\r\n\t\t\t);\r\n        }\r\n\r\n        let openModal = null;\r\n        if(modal){\r\n            openModal = <NoteModal id={id} \r\n                                notes={notes} \r\n                                OnUpdate={this.OnUpdate} \r\n                                OnDelete={this.OnDelete} \r\n                                OnSetUpdate={this.OnSetUpdate}\r\n                                OnCloseModal={this.OnCloseModal}/>\r\n        }\r\n        \r\n        let clazz = update ? \"note-update active\" : \"note-update\"\r\n\t\treturn (\r\n            <React.Fragment>\r\n                <NoteCard notes={notes} OnOpenModal={this.OnOpenModal}/>\r\n                {openModal}\r\n                <div className={clazz}><div>Note updated</div></div>\r\n            </React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import React from 'react';\r\nimport NoteCardContainer from '../note-card-container';\r\nimport './note-page.css';\r\n\r\nconst NotePage = () => {\r\n\treturn (\r\n\t\t<section id=\"note-page\">\r\n\t\t\t<div className=\"container note-page-container\">\r\n\t\t\t\t<h2>Notes</h2>\r\n\t\t\t\t<NoteCardContainer/>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default NotePage;","import Header from './header';\r\nexport default Header;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './header.css';\r\n\r\nexport default class Header extends Component {\r\n    OnClickLink = (first, second) => {\r\n       \r\n        if(!first.classList.contains('router-active')){\r\n            first.classList.add('router-active');\r\n            second.classList.remove('router-active');\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <header>\r\n                <div className=\"header d-flex\">\r\n                    <div className=\"header-logo d-flex align-items-center\">\r\n                        <div className=\"header-logo-img\">\r\n                            <i className=\"far fa-sticky-note\"></i>\r\n                        </div>\r\n                        <h5>NoteKeep</h5>\r\n                    </div>\r\n                    <div className=\"header-routing d-flex align-items-center\">\r\n                        <Link id=\"add\" \r\n                            className=\"router router-active\" \r\n                            to=\"/\" \r\n                            onClick={() => {\r\n                                this.OnClickLink(document.getElementById('add'),document.getElementById('saved'));\r\n                            }}> \r\n                            Add\r\n                        </Link>\r\n                        <Link id=\"saved\"\r\n                            className=\"router\" \r\n                            to=\"/notepage\" \r\n                            onClick={() => {\r\n                                this.OnClickLink(document.getElementById('saved'),document.getElementById('add'));\r\n                            }}>\r\n                            Saved\r\n                        </Link>\r\n                    <div className=\"header-icon\">\r\n                        <a href=\"https://github.com/tameoo\" target=\"blank\">\r\n                                <i className=\"fab fa-github\"></i>\r\n                        </a>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\n","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport {HomePage, NotePage} from '../pages';\r\nimport {Route,Switch} from 'react-router-dom';\r\nimport Header from '../header';\r\n\r\nconst App = () => {\r\n    return (\r\n        <React.Fragment>       \r\n            <Header/>\r\n            <Switch>\r\n                <Route path=\"/\" component={HomePage} exact/>\r\n                <Route path=\"/notepage\" component={NotePage}/>\r\n            </Switch>\r\n        </React.Fragment> \r\n    );\r\n}\r\n\r\nexport default App;","import ErrorIndicator from './error-indicator';\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n    return <div>Hey! Something goes wrong... Error!!!</div>;\r\n}\r\n\r\nexport default ErrorIndicator;","import ErrorBoundary from './error-boundary';\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nclass ErrorBoundary extends Component {\r\n    \r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch(){\r\n        this.setState(\r\n            {\r\n                hasError: true\r\n            }\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        const {hasError} = this.state;\r\n\r\n        if(hasError){\r\n            return <ErrorIndicator/>\r\n        } \r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport ErrorBoundary from './components/error-boundary';\r\n\r\nReactDOM.render(\r\n  \r\n    <ErrorBoundary>\r\n        <Router>\r\n          <App/>\r\n        </Router>\r\n    </ErrorBoundary>\r\n\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}